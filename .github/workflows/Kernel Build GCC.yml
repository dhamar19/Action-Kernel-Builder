name: Kernel Build J5

on:
  workflow_dispatch:
    inputs:
      BUILD_TITLE:
        description: 'Custom Build Title'
        default: Fulmen Kernel Build
        required: false
      CODENAME:
        description: 'Device codename'
        default: J5LTE
        required: true
      KERNEL_SOURCE:
        description: 'Kernel Source'
        default: https://github.com/dhamar19/android_kernel_samsung_msm8916.git
        required: true
      KERNEL_SOURCE_BRANCH:
        description: 'Kernel Source Branch'
        required: true
      ANYKERNEL_URL:
        description: 'AnyKernel Url'
        default: https://github.com/dhamar19/AnyKernel3.git
        required: false
      ANYKERNEL_BRANCH:
        description: 'AnyKernel Branch'
        default: j5lte
        required: true

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
    - name: Display User Inputs
      run: |
        echo "::group::User Environment Variables"
        echo "Custom Build Title: ${{ github.event.inputs.BUILD_TITLE }}"
        echo "Codename: ${{ github.event.inputs.CODENAME }}"
        echo "Kernel Source: ${{ github.event.inputs.KERNEL_SOURCE }}/tree/${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}"
        echo "AnyKernel Url: ${{ github.event.inputs.ANYKERNEL_URL }}/tree/${{ github.event.inputs.ANYKERNEL_BRANCH }}"
        echo "::endgroup::"

    - name: Initialize workspace
      run: |
        mkdir workspace
        cd workspace

        echo "current_date=$(date +'%d %B %Y')" >> $GITHUB_OUTPUT
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT

        if [[ -z "${{ github.event.inputs.BUILD_TITLE }}" ]]; then
          build_title="${{ github.event.inputs.CODENAME }}"
        else
          build_title="${{ github.event.inputs.BUILD_TITLE }}"
        fi
        echo "build_title=$build_title" >> $GITHUB_OUTPUT
      id: workspace

    - name: Send Telegram notification for start build
      uses: appleboy/telegram-action@master
      env:
        TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        disable_web_page_preview: true
        message: |
          <b>${{ github.event.inputs.BUILD_TITLE }}</b>
          <b>⚒️ Kernel Build Start ⚒️</b>
          
          <b>📱 Device</b>: Samsung Galaxy J5 
          <b>💾 Codename</b>: ${{ github.event.inputs.CODENAME }}
          <b>🏷️ Branch</b>: ${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}
          <b>🗓️ Date</b>: ${{ steps.workspace.outputs.current_date }}
          
          Build by @dhamarar
          
          <b>Action</b>: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        format: html

    - name: Prepare the build environment
      run: |
        sudo apt update -y && sudo apt upgrade -y
        sudo apt install -y bc flex curl git zip ftp libncurses5 libssl-dev lftp zstd wget libfl-dev python2 python3 libarchive-tools gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        git clone https://github.com/Galaxy-MSM8916/android-prebuilts-gcc-linux-x86-arm-arm-eabi-7.2.git tool
        echo "tools-folder=$(pwd)/tool" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.workspace.outputs.workspace-folder }}
      id: tools

    - name: Clone kernel source
      run: |
        git clone --depth=1 ${{ github.event.inputs.KERNEL_SOURCE }} -b ${{ github.event.inputs.KERNEL_SOURCE_BRANCH }} kernel_tree
        echo "kernel-folder=$(pwd)/kernel_tree" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.workspace.outputs.workspace-folder }}
      id: kernel

    - name: Building kernel
      run: |
        set -e
        mkdir -p output
        export ARCH=arm
        export CROSS_COMPILE="${{ steps.tools.outputs.tools-folder }}/bin/arm-eabi-"
        export USE_CCACHE=1

        make mrproper
        make -C $(pwd) O=output VARIANT_DEFCONFIG=msm8916_sec_j5lte_eur_defconfig msm8916_sec_defconfig SELINUX_DEFCONFIG=selinux_defconfig
        make -j$(nproc --all) O=output 2>&1 | tee output/compile.log

        cp output/compile.log $GITHUB_WORKSPACE/
        echo "elapsed_time=$(($(date +%s) - ${{ steps.workspace.outputs.start_time }}))" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.kernel.outputs.kernel-folder }}
      id: build

    - name: AnyKernel3
      if: ${{ success() && github.event.inputs.ANYKERNEL_URL != '' }}
      run: |
        set -e
        if [[ -z "${{ github.event.inputs.ANYKERNEL_BRANCH }}" ]]; then
          anykernel_branch=master
        else
          anykernel_branch=${{ github.event.inputs.ANYKERNEL_BRANCH }}
        fi

        git clone --recursive --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} -b $anykernel_branch AnyKernel3

        IMG=""
        if [[ -f "zImage" ]]; then
          IMG="zImage"
        elif [[ -f "Image.gz-dtb" ]]; then
          IMG="Image.gz-dtb"
        elif [[ -f "Image.gz" ]]; then
          IMG="Image.gz"
        elif [[ -f "Image" ]]; then
          IMG="Image"
        else
          echo "Error: Tidak menemukan kernel image yang valid!"
          exit 1
        fi

        cp -f "$IMG" AnyKernel3/
        name=AnyKernel3-FulmenKernel-${{ github.event.inputs.CODENAME }}-$(date +%Y%m%d).zip
        cd AnyKernel3
        zip -q -r $name *
        mv $name ../
        echo "zipname=$name" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.kernel.outputs.kernel-folder }}/output/arch/arm/boot/
      id: anykernel

    - name: Upload zImage artifact
      if: ${{ success() }}
      uses: actions/upload-artifact@v4
      with:
        name: Kernel-zImage
        path: ${{ steps.kernel.outputs.kernel-folder }}/output/arch/arm/boot/zImage

    - name: Upload final zip from AnyKernel
      if: ${{ success() }}
      uses: actions/upload-artifact@v4
      with:
        name: Kernel-Zip
        path: ${{ steps.kernel.outputs.kernel-folder }}/output/arch/arm/boot/${{ steps.anykernel.outputs.zipname }}

    - name: Send Telegram notification for success
      uses: appleboy/telegram-action@master
      env:
        TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
      if: ${{ success() && steps.anykernel.outputs.zipname != '' }}
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        disable_web_page_preview: true
        document: ${{ steps.kernel.outputs.kernel-folder }}/output/arch/arm/boot/${{ steps.anykernel.outputs.zipname }}
        message: |
          <b>${{ steps.workspace.outputs.build_title }}</b>
          <b>✅ Kernel Successfully Built</b>
          
          <b>📱 Device</b>: Samsung Galaxy J5
          <b>💾 Codename</b>: ${{ github.event.inputs.CODENAME }}
          <b>🏷️ Branch</b>: ${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}
          <b>📦 Zip Name</b>: ${{ steps.anykernel.outputs.zipname }}
          <b>⏳ Build Time</b>: ${{ steps.build.outputs.elapsed_time }} seconds
          <b>🗓️ Date</b>: ${{ steps.workspace.outputs.current_date }}
          
          Build by @dhamarar
          <b>Source</b>: ${{ github.event.inputs.KERNEL_SOURCE }}
          <b>Action</b>: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        format: html

    - name: Upload compile log on failure
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: compile.log
        path: compile.log

    - name: Send Telegram notification for failure
      uses: appleboy/telegram-action@master
      env:
        TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
      if: ${{ failure() }}
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        disable_web_page_preview: true
        document: compile.log
        message: |
          <b>${{ steps.workspace.outputs.build_title }}</b>
          <b>❌ Kernel Build Failed</b>
          
          <b>📱 Device</b>: Samsung Galaxy J5
          <b>💾 Codename</b>: ${{ github.event.inputs.CODENAME }}
          <b>🏷️ Branch</b>: ${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}
          <b>🗓️ Date</b>: ${{ steps.workspace.outputs.current_date }}
          
          <b>Check log:</b> ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        format: html
